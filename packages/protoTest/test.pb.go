// Code generated by protoc-gen-go.
// source: test.proto
// DO NOT EDIT!

/*
Package protoTest is a generated protocol buffer package.

It is generated from these files:
	test.proto

It has these top-level messages:
	Media
	MediaStore
*/
package protoTest

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Media_LoanType int32

const (
	Media_TYPE1 Media_LoanType = 0
	Media_TYPE2 Media_LoanType = 1
	Media_TYPE3 Media_LoanType = 2
	Media_TYPE4 Media_LoanType = 3
)

var Media_LoanType_name = map[int32]string{
	0: "TYPE1",
	1: "TYPE2",
	2: "TYPE3",
	3: "TYPE4",
}
var Media_LoanType_value = map[string]int32{
	"TYPE1": 0,
	"TYPE2": 1,
	"TYPE3": 2,
	"TYPE4": 3,
}

func (x Media_LoanType) String() string {
	return proto.EnumName(Media_LoanType_name, int32(x))
}
func (Media_LoanType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0, 0} }

type Media struct {
	Client    string             `protobuf:"bytes,1,opt,name=client" json:"client,omitempty"`
	Username  string             `protobuf:"bytes,2,opt,name=username" json:"username,omitempty"`
	Version   int64              `protobuf:"varint,3,opt,name=version" json:"version,omitempty"`
	MediaItem []*Media_MediaItem `protobuf:"bytes,4,rep,name=mediaItem" json:"mediaItem,omitempty"`
}

func (m *Media) Reset()                    { *m = Media{} }
func (m *Media) String() string            { return proto.CompactTextString(m) }
func (*Media) ProtoMessage()               {}
func (*Media) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Media) GetMediaItem() []*Media_MediaItem {
	if m != nil {
		return m.MediaItem
	}
	return nil
}

type Media_MediaItem struct {
	Guid        string         `protobuf:"bytes,1,opt,name=guid" json:"guid,omitempty"`
	Ordernumber string         `protobuf:"bytes,2,opt,name=ordernumber" json:"ordernumber,omitempty"`
	Type        Media_LoanType `protobuf:"varint,3,opt,name=type,enum=protoTest.Media_LoanType" json:"type,omitempty"`
	Mimetype    string         `protobuf:"bytes,4,opt,name=mimetype" json:"mimetype,omitempty"`
	ImageBytes  []byte         `protobuf:"bytes,5,opt,name=imageBytes,proto3" json:"imageBytes,omitempty"`
}

func (m *Media_MediaItem) Reset()                    { *m = Media_MediaItem{} }
func (m *Media_MediaItem) String() string            { return proto.CompactTextString(m) }
func (*Media_MediaItem) ProtoMessage()               {}
func (*Media_MediaItem) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0, 0} }

type MediaStore struct {
	Media []*Media `protobuf:"bytes,1,rep,name=media" json:"media,omitempty"`
}

func (m *MediaStore) Reset()                    { *m = MediaStore{} }
func (m *MediaStore) String() string            { return proto.CompactTextString(m) }
func (*MediaStore) ProtoMessage()               {}
func (*MediaStore) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *MediaStore) GetMedia() []*Media {
	if m != nil {
		return m.Media
	}
	return nil
}

func init() {
	proto.RegisterType((*Media)(nil), "protoTest.Media")
	proto.RegisterType((*Media_MediaItem)(nil), "protoTest.Media.MediaItem")
	proto.RegisterType((*MediaStore)(nil), "protoTest.MediaStore")
	proto.RegisterEnum("protoTest.Media_LoanType", Media_LoanType_name, Media_LoanType_value)
}

func init() { proto.RegisterFile("test.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 292 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x64, 0x50, 0x4d, 0x4b, 0xf3, 0x40,
	0x10, 0x7e, 0xd3, 0x24, 0x7d, 0x9b, 0xa9, 0x48, 0x98, 0x83, 0xac, 0x3d, 0x48, 0xe9, 0x41, 0x7a,
	0xb1, 0x60, 0x5a, 0xc4, 0xb3, 0xe0, 0x41, 0x50, 0x90, 0x35, 0x17, 0x8f, 0xa9, 0x19, 0xca, 0x82,
	0x9b, 0x2d, 0x9b, 0x8d, 0xd0, 0xff, 0xe4, 0xef, 0xf3, 0xec, 0x66, 0x93, 0x8d, 0x45, 0x2f, 0xc9,
	0x3c, 0x1f, 0x3b, 0xf3, 0xcc, 0x00, 0x18, 0xaa, 0xcd, 0x6a, 0xaf, 0x95, 0x51, 0x98, 0xb8, 0x5f,
	0x6e, 0x89, 0xc5, 0xd7, 0x08, 0xe2, 0x27, 0x2a, 0x45, 0x81, 0x67, 0x30, 0x7e, 0x7b, 0x17, 0x54,
	0x19, 0x16, 0xcc, 0x83, 0x65, 0xc2, 0x7b, 0x84, 0x33, 0x98, 0x34, 0x35, 0xe9, 0xaa, 0x90, 0xc4,
	0x46, 0x4e, 0x19, 0x30, 0x32, 0xf8, 0xff, 0x41, 0xba, 0x16, 0xaa, 0x62, 0xa1, 0x95, 0x42, 0xee,
	0x21, 0xde, 0x42, 0x22, 0xdb, 0xb6, 0x0f, 0x86, 0x24, 0x8b, 0xe6, 0xe1, 0x72, 0x9a, 0xcd, 0x56,
	0xc3, 0xd8, 0x95, 0x1b, 0xd9, 0x7d, 0x5b, 0x07, 0xff, 0x31, 0xcf, 0x3e, 0x03, 0x48, 0x06, 0x01,
	0x11, 0xa2, 0x5d, 0x23, 0xca, 0x3e, 0x93, 0xab, 0x71, 0x0e, 0x53, 0xa5, 0x4b, 0x1b, 0xa1, 0x91,
	0x5b, 0xd2, 0x7d, 0xa8, 0x63, 0x0a, 0xaf, 0x20, 0x32, 0x87, 0x3d, 0xb9, 0x50, 0xa7, 0xd9, 0xf9,
	0x9f, 0xc1, 0x8f, 0xaa, 0xa8, 0x72, 0x6b, 0xe0, 0xce, 0xd6, 0xae, 0x28, 0x85, 0x24, 0xf7, 0x24,
	0xea, 0x56, 0xf4, 0x18, 0x2f, 0x00, 0x84, 0x2c, 0x76, 0x74, 0x77, 0xb0, 0x07, 0x64, 0xb1, 0x55,
	0x4f, 0xf8, 0x11, 0xb3, 0xb8, 0x81, 0x89, 0xef, 0x86, 0x09, 0xc4, 0xf9, 0xeb, 0xf3, 0xfd, 0x75,
	0xfa, 0xcf, 0x97, 0x59, 0x1a, 0xf8, 0x72, 0x9d, 0x8e, 0x7c, 0xb9, 0x49, 0xc3, 0xc5, 0x06, 0xc0,
	0x65, 0x79, 0x31, 0x4a, 0x13, 0x5e, 0x42, 0xec, 0x2e, 0x60, 0xf7, 0x6c, 0x4f, 0x95, 0xfe, 0x4e,
	0xcc, 0x3b, 0x79, 0x3b, 0x76, 0xfc, 0xfa, 0x3b, 0x00, 0x00, 0xff, 0xff, 0x0d, 0x58, 0xef, 0x16,
	0xce, 0x01, 0x00, 0x00,
}
